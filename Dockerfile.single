# --- Stage 1: Build the frontend as static files (Next.js export) ---
FROM node:22-alpine AS fe-build
WORKDIR /app

# Install deps
COPY frontend/package*.json ./
RUN --mount=type=cache,target=/root/.npm npm ci

# Build a static site (next.config.js has output:'export' so build emits /app/out)
COPY frontend/ ./
RUN npm run build

# --- Stage 2: Build the backend runtime (Python + FastAPI) ---
FROM python:3.11-slim AS backend
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1
WORKDIR /app

# System deps for opencv/mediapipe and utilities
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender1 \
    wget \
    pngquant \
 && rm -rf /var/lib/apt/lists/*

# Python deps
COPY backend/requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -U pip \
 && pip install --no-cache-dir -r requirements.txt

# App code
COPY backend/ /app/

# MediaPipe Tasks model for object detection (EfficientDet-Lite0)
RUN mkdir -p /app/models \
 && wget -q -O /app/models/efficientdet_lite0.tflite \
    https://storage.googleapis.com/mediapipe-models/object_detector/efficientdet_lite0/float32/1/efficientdet_lite0.tflite || true

# Frontend static assets (exported by the previous stage)
# Next build wrote to /app/out in the fe-build stage.
COPY --from=fe-build /app/out /app/static

# Non-root
RUN useradd -m app && chown -R app:app /app
USER app

EXPOSE 8000

# Healthcheck: OpenAPI should always exist
HEALTHCHECK --interval=10s --timeout=3s --retries=6 \
  CMD wget -q --spider http://127.0.0.1:8000/openapi.json || exit 1

# Single process: Uvicorn serves both API and static site
CMD ["uvicorn","main:app","--host","0.0.0.0","--port","8000","--workers","1"]
